server:
  port: 8484

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/kosmo_furniture
    username: kosmo_furniture
    password: 1234

  # 요청 url이 존재하지 않을때 오류일으켜서 @ControllerAdvice에서 캐치할수 있게 하기 위한 설정
  web:
    resources:
      add-mappings: false
  mvc:
    # 요청 url이 존재하지 않을때 오류일으켜서 @ControllerAdvice에서 캐치할수 있게 하기 위한 설정
    throw-exception-if-no-handler-found: true
  #  Spring boot에서 JSP사용하기위한 설정
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  thymeleaf:
    view-names: thymeleaf/*

#  파일업로드 사이즈 설정
  servlet:
    multipart:
      maxFileSize: 100MB
      maxRequestSize: 100MB

  devtools:
    livereload:
      enabled: true

# pagination 설정
pagehelper:
  helper-dialect: mysql
  auto-dialect: true
  reasonable: false
  page-size-zero: false
  offset-as-page-num: false
  row-bounds-with-count: false
  auto-runtime-dialect: false
  close-conn: true
  default-count: true

mybatis:
  type-aliases-package: com.kosmo.kosmofurniture.domain
  configuration: # member_id의 컬럼을 memberId로 자동으로 변환
    map-underscore-to-camel-case: true
#  mapper-locations: classpath:mapper/**/*.xml

#Oauth2 설정
#  security:
#    oauth2:
#      client:
#        registration:
#          kakao:
#            client-id: 047488b82cd4185c490e274d8aa01c86
#            client-secret: kosmo123123kpb
#            scope:
#            redirect-uri: "http://121.88.86.169:8484/login/oauth_kakao"
#            authorization-grant-type: authorization_code
#            client-name: kakao
#            client-authentication-method: POST
#        provider:
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id

logging:
  level:
    com.kosmo.kosmofurniture : debug
    com.kosmo.kosmofurniture.mapper : warn
